<section class="columns has-text-centered story-content">
  <section class="column is-offset-3 is-6"> <!-- 本column為columns六格中的第三格（左到右） -->
    <h1 class="title"><%= @story.title %></h1>

    <span class="profile" data-controller='user'>
      <!-- 文章作者大頭照 -->
      <!-- <img src="https://fakeimg.pl/50x50/" class="avatar">  -->
       <!-- image_tag @story.user.avatar.variant(resize: "50x50"), class: 'avatar' if @story.user.avatar.attached?  -->
       <%= image_tag @story.user.avatar.variant(resize_to_fill: [50,50]), class: 'avatar' if @story.user.avatar.attached? %>
      <!-- <img class="avatar" src="http://localhost:3000/rails/active_storage/representations/redirect/...png" /> -->
      <!-- stories資料表中被撈出的文章 的 使用者，該使用者 的 大頭照 -->

      <!-- 文章作者使用者名稱 -->
      <span class="username"><%= @story.user.username %></span>

      <!-- 追蹤按鈕 -->
      <%= link_to '#', class: 'follow-button',
                       data: { action: 'user#follow', 
                       user: @story.user.id, 
                       target: 'user.followButton' } do %>
      <!-- date-user = @story.user.id  要去找要follow哪位使用者-->
      <!-- <a href="#" class="follow-button">追蹤</a> -->

        <%=  (user_signed_in? && current_user.follow?(@story.user))? '追蹤中' : '追蹤' %>
        <!-- 如果 使用者有登入，且 已經追蹤 此篇文章的 作者使用者，追蹤按鈕就顯示「追蹤中」，沒登入或沒追蹤的話，就顯示「追蹤」 -->
        <!-- 流程控制 的 三元運算子 寫法 -->
      <% end %>

      <!-- 書籤收藏按鈕 -->
      <%= link_to '#', class: 'bookmark-button', data: { action: 'user#bookmark', slug: @story.slug } do %>
        <% if user_signed_in? && current_user.bookmark?(@story) %> <!-- 如果 使用者有登入，且 已經收藏 此篇文章 -->
          <i class="fa-solid fa-bookmark" data-target="user.bookmark"></i>
          <!-- 顯示實心書籤 -->
          <!-- data-target為 觸發data-action成功後 要操控的對象 -->
        <% else %> <!-- 如果 使用者沒登入，或 尚未收藏 此篇文章 -->
          <i class="fa-regular fa-bookmark" data-target="user.bookmark"></i>
          <!-- 顯示空心書籤 -->
        <% end %>
      <% end %>

    </span>

    <article class="content">
      <!--  文章封面照片 -->
      <!-- <img src="https://fakeimg.pl/1000x500/" class="cover-image" alt=""> -->
      <%= image_tag @story.cover_image.variant(resize: '1000x500'), class: 'cover-image' if @story.cover_image.attached? %>

      <!-- 文章內文 -->
      <!-- simple_format(@story.content) -->
      <!-- simple_format是rails的一個helper，可以辨別顯示的內容中的html標籤語法，且會正確呈現換行，還會清掉顏色設定，但這邊不想清掉 文章編輯頁面編輯器所給的文字顏色，所以改用.html_safe -->
      <%= @story.content.html_safe %>
      <!-- .html_safe就不會過濾 文字編輯器給文章文字 套用的css -->

      <footer data-controller='story'> <!-- 將此footer區塊交給stroy_controller.js負責 -->
      <!-- stimulus.js寫法 --> <!-- story controller -->
      <!-- data-controller 設定此區域 要去 哪個控制器 找指令 -->
        <%= link_to '#', class: 'clapButton is-size-4 has-text-primary',data: { action: 'story#addClap', slug: @story.slug } do %>
        <!-- 按下此按鈕，就會執行story_controller.js（frontend > controllers）的addClap action（函式） -->
        <!-- @story.slug是文章上那一串網址，而且因為是uniq唯一，所以可以用來辨別是 為哪一篇文章拍手 -->
        <!-- <a class="clapButton is-size-4 has-text-primary" data-action="story#addClap" data-slug="文章名稱" href="#"> -->
        <!-- <button data-action="click->story#addClap"></button> -->
        <!-- 預設為click 所以可省略 -->
        <!-- data-aciton 按鈕被按後要觸發的事件 -->
        <!-- '#'路徑為空 因為要往AJAX打 所以不用填 -->

          <i class="fa-solid fa-hands-clapping"></i>
          <span class="clapCount" data-target="story.clapCount"><%= @story.clap %></span>
          <!-- story.clapCount表示是在data-controller='story'的元件 -->
          <!-- data-target 要被抓到並操控的 目標 -->
        <% end %>
      </footer>
    </article>
    <hr>
    <section class="comments">
      <h2>留言</h2>

      <%= render 'comment_area', story: @story, comment: @comment %>

      <section class="comment-list">
        <%= render partial: 'comment', collection: @comments %>
        <!-- collection: 為rails內建的render手法 -->
        <!-- 控制器中 @comments = @story.comments.order(id: :desc) -->
        <!-- collection: @comments 會在頁面渲染出 @comments陣列中的內容（自動跑迴圈） -->
        <!-- 慣例：因為 @comments 使用 複數，_comment.html.erb中就不用再寫for迴圈 或each，可以直接使用 單數的comment區域變數 -->
        <!-- 之前一般會寫render 'comment'  但其實是簡寫 省略partial: ，現在後面有接其他東西，所以不能簡寫 -->
      </section>

    </section>
  </section>
</section>