<!-- 新建文章new 與編輯已建立的文章edit 的 共用頁面-->

<!-- 如果 文章物件 有任何錯誤，就印出錯誤訊息 -->
<% if story.errors.any? %> 
<!-- 判斷 文章物件 有沒有任何錯誤 -->
    <div class="notification is-danger">
        <%= story.errors.full_messages.to_sentence %>
        <!-- 將文章物件中的錯誤訊息轉成句子 -->
    </div>
<% end %>

<!-- form_for(MODEL) do |form|
end -->
<%= form_for(story, html: {class: 'story-editor'}) do |form| %> <!-- 還沒在controller建@story前，會出現錯誤：First argument in form cannot contain nil or be empty -->
    
    <div class="field">
        <%= image_tag story.cover_image.variant(resize: '1000x800'), class: 'cover-image' if story.cover_image.attached? %>
        <%= form.label :cover_image, '文章封面照' %><br />
        <!-- label自動會跟在上傳的圖片後面（同一列），如果要讓image tag變成block元素，要去css寫（先給一個class名稱 方便css選取） -->
        <div class="control">
        <%= form.file_field :cover_image %>
        <!-- <input type="file" name="story[cover_image]" id="story_cover_image" /> -->
        </div>
        <!-- 於畫面顯示 故事cover_image欄位裡的圖片 -->
        <!-- .variant(resize: '??x??') 要安裝image_processing與ImageMagick才能使用 -->
        <!-- 真的把尺寸改掉（檔案大小也會變），不是用html或css控制長寬 假裝變小（畫面顯示有變小 下載後一樣大） -->
        <!-- if story.cover_image.attached? 如果故事有上傳封面照片，才呈現圖片及做縮圖處理 -->
    </div>

    <div class="field">
        <%= form.label :title, '文章標題' %>
        <%= form.text_field :title, class: 'input is-primary is-medium' %> 
        <!-- form.text_field :輸入的值 送出後 對應 要寫入 的 資料庫欄位名稱 -->
    </div>
    <div class="field">
        <%= form.label :content, '文章內容' %>
        <%= form.text_area :content, rows: 10, class: 'textarea is-primary is-medium' %> 
        <!-- <textarea>標籤 為 多行輸入框，以rows=""及cols=""控制長寬 -->
    </div>
    <div class="field">
        <% if story.published? %> <!-- 如果文章是發佈狀態 -->
            <%= form.submit '更新', name: 'save_as_draft', class: 'button is-medium' %>
            <!-- 發佈狀態下的編輯文章 就不會有 儲存草稿 按鈕，畢竟已發佈的文章 狀態就不是草稿 -->
        <% else %> <!-- 如果文章是草稿狀態 -->
            <%= form.submit '儲存草稿', name: 'save_as_draft', class: 'button is-medium' %>
        <% end %>
        
        <%= form.submit '發佈文章', name: 'publish', class: 'button is-medium is-primary' if story.may_publish? %>
        <!-- 按下發佈文章按鈕後 會有publish key給controller用 -->
        <!-- 流程控制倒裝句，如果文章為可發佈（表示現為草稿狀態），才出現此按鈕 -->
        <%= form.submit '下架文章', name: 'unpublish', class: 'button is-medium is-danger' if story.may_unpublish? %>
        <!-- 按下下架文章按鈕後 會有unpublish key給controller用 -->
        <!-- 流程控制倒裝句，如果文章為可下架（表示現為發佈狀態），才出現此按鈕 -->
    </div>
<% end %> 

<%= javascript_pack_tag 'editor' %>
<!-- 去載入 pack資料夾中 的editor.js檔案（由Webpack編譯） -->